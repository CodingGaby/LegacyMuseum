---
import BackBtn from "@components/ui/Buttons/BackBtn.astro";
import Layout from "../../layouts/Layout.astro";
import BankAccountForm from "@components/BankAccount/BankAccountForm.astro";
import { turso } from "src/turso";
import { convertBankAccountDataToJSON } from "@functions/ConvertBankAccountDataToJSON";
import SubmitBtn from "@components/ui/Buttons/SubmitBtn.astro";
import bankStatusTextToId from "@functions/bankStatusTextToId";

const { bankAccountID } = Astro.params;

if (!bankAccountID) {
  throw new Error("Error: 'bankAccountID' no está definido en la ruta.");
}

// Consultar la información de la cuenta bancaria sin relaciones adicionales
const rows = await turso.execute(
  `SELECT 
    ba.bankAccountID, 
    ba.bankID, 
    ba.entityID, 
    ba.entityType, 
    ba.currencyID, 
    ba.accountTypeID, 
    ba.statusID, 
    ba.bicCode, 
    ba.customerID,
    b.bankName,
    c.currencyName,
    at.accountType AS accountTypeName,  
    s.statusName AS statusDescription  
  FROM BankAccounts AS ba
  LEFT JOIN Banks AS b ON ba.bankID = b.bankID
  LEFT JOIN Currencies AS c ON ba.currencyID = c.currencyID
  LEFT JOIN AccountTypes AS at ON ba.accountTypeID = at.accountTypeID
  LEFT JOIN Status AS s ON ba.statusID = s.statusID
  WHERE ba.bankAccountID = ${bankAccountID};`
);


// Convertir los resultados a formato JSON
const result = convertBankAccountDataToJSON(rows.toJSON());

if (Astro.request.method === "POST") {
  // Parsear los datos del formulario
  const formData = await Astro.request.formData();

  const bankID = parseInt(formData.get("bankID")?.toString() || '0', 10);
  const accountTypeID = parseInt(formData.get("accountTypeID")?.toString() || '0', 10);
  const currencyID = parseInt(formData.get("currencyID")?.toString() || '0', 10);
  const statusText = formData.get("statusID")?.toString() || '';
  const statusID = bankStatusTextToId(statusText); // Convertir texto a ID
  const bicCode = formData.get("bicCode")?.toString() || '';

  // Actualizar la base de datos con los nuevos valores
  await turso.execute(`
    UPDATE BankAccounts 
    SET
      bankID = ${bankID}, 
      accountTypeID = ${accountTypeID},
      currencyID = ${currencyID},
      statusID = ${statusID},
      bicCode = '${bicCode}'
    WHERE bankAccountID = ${bankAccountID}
  `);

  // Redirigir después de actualizar
  return Astro.redirect(`/bankaccount/${bankAccountID}`);
}
---

<Layout title="Editar Cuenta Bancaria">
  <BankAccountForm selectedBankAccount={result[0]}>
    <div class="flex justify-end max-w-full mx-auto px-8">
      <BackBtn />
      <SubmitBtn>Actualizar</SubmitBtn>
    </div>
  </BankAccountForm>
</Layout>
