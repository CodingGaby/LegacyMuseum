---
import Form from "@components/ui/Forms/Form.astro";
import FormInput from "@components/ui/Forms/FormInput.astro"
import FormSelect from "@components/ui/Forms/FormSelect.astro";
import SelectOption from "@components/ui/Forms/SelectOption.astro";
import { convertSuppliersDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { convertStatusDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { convertLegalDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { convertAdressesDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { sequence } from "astro:middleware";
import { any } from "astro:schema";
import { array } from "astro:schema";
import { addIssueToContext } from "astro:schema";
import { turso } from "src/turso";

const path = Astro.url.pathname.replace(/\/$/, ""); // Elimina el "/" al final si existe.
const previousPath = path.substring(0, path.lastIndexOf("/")) || "/";



interface Props {
  selectedSupplier?: any;
}

const {selectedSupplier} = Astro.props;

let supplierID = "";
let souvenirData;
let result;
let resultLegal;
let legalData;
let resultStatus;
let StatusData;
let addressesData;
let resultAddresses;

legalData = await turso.execute("SELECT * FROM LegalEntities")

StatusData = await turso.execute(`
  SELECT * 
  FROM Status 
  WHERE statusName IN ('Alta')
`);

souvenirData = await turso.execute("SELECT * FROM Souvenirs")

addressesData = await turso.execute('SELECT * FROM Addresses')

const data = souvenirData.toJSON()

if (!selectedSupplier) {
  result = convertSuppliersDataToJSON(data)
  resultLegal = convertLegalDataToJSON(legalData.toJSON())
  resultStatus = convertStatusDataToJSON(StatusData.toJSON())
  resultAddresses = convertAdressesDataToJSON(addressesData.toJSON())
}
else  {
  result = convertSuppliersDataToJSON(data).filter((p) => p.supplierID !== selectedSupplier.supplierID); 
  resultLegal = convertLegalDataToJSON(legalData.toJSON()).filter((l) => l.legalEntityID  !== selectedSupplier.legalEntityID ); 
  resultStatus = convertStatusDataToJSON(StatusData.toJSON()).filter((s) => s.statusID  !== selectedSupplier.statusID ); 
  resultAddresses = convertAdressesDataToJSON(addressesData.toJSON()).filter((a) => a.addressID !== selectedSupplier.addressID );
}

console.log(result);
console.log(resultLegal);
console.log(resultStatus);
console.log(resultAddresses);

---

<Form title="Alta Proveedores">
  {
    !selectedSupplier
    ?
    <div class="grid grid-cols-2 gap-4">

        <!-- Primera columna -->
        <div class="flex flex-col">
          <!-- Id Proveedor -->
            <FormInput type="number" name="supplierID" title="idSupplier" placeholder={supplierID} isRequired isDisabled/>

          <!-- Id Entidad Legal -->
          <FormSelect name="legalEntityID" title="Entidad legal" isRequired >
            <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
            {
              resultLegal?.map((w) => (
                <SelectOption value={w.legalEntityID?.toString() ?? ''}>{w.name }</SelectOption>
              ))
            }
          </FormSelect>

          <!-- Id Status -->
          <FormSelect name="statusID" title="Status">
            <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
            {
              resultStatus?.map((w) => (
                <SelectOption value={w.statusID?.toString() ?? ''}>{w.statusName}</SelectOption>
              ))
            }
          </FormSelect>
          
          <!-- Dirección -->
        <FormInput type="text" name="street" title="Calle" placeholder="Calle"/>
        <FormInput type="text" name="city" title="Ciudad" placeholder="Ciudad"/>

        </div>

        <!-- Segunda columna -->
        <div class="flex flex-col">

          <!-- Número fe telefono -->
            <FormInput type="text" name="phoneNumber" title="phoneNumber" placeholder="Número de telefono"/>

          <!-- Email -->
          <FormInput type="email" name="email" title="email" placeholder="Email"/>

          <!-- Dirección -->
        <FormInput type="text" name="postalCode" title="Código Postal" placeholder="Código Postal"/>
        <FormInput type="text" name="outsideNumb" title="Número Exterior" placeholder="Número Exterior"/>
        </div>
    </div>

    <slot/>
  :

      <!-- Edit -->

      <div class="grid grid-cols-2 gap-4">
        
        <!-- Primera columna -->
        <div class="flex flex-col">
          <!-- Id Proveedor -->
            <FormInput type="number" name="supplierID" title="idSupplier" placeholder="ID Supplier" value={selectedSupplier.supplierID}/>

            <!-- Id Entidad Legal -->
          <FormSelect name="legalEntityID" title="Entidad Legal" >
            <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
            {
              resultLegal?.map((w) => (
                <SelectOption value={w.legalEntityID?.toString() ?? ''}>{w.name }</SelectOption>
              ))
            }
          </FormSelect>

          <!-- Id Status -->
          <FormSelect name="statusID" title="Status">
            <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
            {
              resultStatus?.map((w) => (
                <SelectOption value={w.statusID?.toString() ?? ''}>{w.statusName}</SelectOption>
              ))
            }
          </FormSelect>


          <!-- Dirección -->
        <FormInput type="text" name="street" title="Calle" placeholder="Calle"/>
        <FormInput type="text" name="city" title="Ciudad" placeholder="Ciudad"/>

        </div>

        <!-- Segunda columna -->
        <div class="flex flex-col">

          <!-- Número fe telefono -->
            <FormInput type="text" name="phoneNumber" title="phoneNumber" placeholder="Número de telefono"/>

          <!-- Email -->
          <FormInput type="text" name="email" title="email" placeholder="Email"/>

          <!-- Dirección -->
        <FormInput type="text" name="postalCode" title="Código Postal" placeholder="Código Postal"/>
        <FormInput type="text" name="outsideNumb" title="Número Exterior" placeholder="Número Exterior"/>
        </div>
    </div>

    <slot/>
  }
</Form>